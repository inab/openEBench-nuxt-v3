#worker_processes auto;
#events { worker_connections 1024 }



server {
    listen 80;  # Nginx escucha en el puerto 80, expuesto al host

    server_name test2.openebench.bsc.es;   # O puedes especificar tu dominio si es necesario


    # Proxy para las rutas del backend (API)
    location /server/ {
        proxy_pass http://127.0.0.1:3000; # Backend de Nuxt
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # Rutas estáticas servidas por Nginx
    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri/ /index.html;
    }

    location /_nuxt/ {
        root /usr/share/nginx/html;
    }
}


# server {
#     listen 80;  # Nginx escucha en el puerto 80, expuesto al host

#     server_name test2.openebench.bsc.es;   # O puedes especificar tu dominio si es necesario


#     # Proxy para las rutas del backend (API)
#     location /server/ {
#         proxy_pass http://127.0.0.1:3000; # Backend de Nuxt
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;
#     }

#      # Rutas estáticas servidas por Nginx
#     location / {
#         root /usr/share/nginx/html;
#         index index.html;
#         try_files $uri $uri/ /index.html;
#     }

#     # Directorio de los archivos estáticos generados por Nuxt
#     # root /app/.output/public;
    
#     # Servir archivos estáticos (JS, CSS, imágenes, etc.)
#     # location /_nuxt/ {
#     #     try_files $uri $uri/ =404;  # Asegura que los archivos estáticos se sirvan correctamente
#     # }

#     # Rutas dinámicas (API - Proxy a Nuxt backend)
#     # location /api/ {
#     #     proxy_pass http://localhost:3000;  # Redirige las solicitudes de la API al servidor Nuxt
#     #     proxy_http_version 1.1;
#     #     proxy_set_header Upgrade $http_upgrade;
#     #     proxy_set_header Connection 'upgrade';
#     #     proxy_set_header Host $host;
#     #     proxy_cache_bypass $http_upgrade;
#     # }

#     # location / {
#     #     root /usr/share/nginx/html;
#     #     index index.html;
#     #     try_files $uri $uri/ /index.html;
#     # }

#     # location /api/ {
#     #     proxy_pass http://localhost:3000;  # Redirige a Nuxt backend en el puerto 3000
#     #     proxy_http_version 1.1;
#     #     proxy_set_header Upgrade $http_upgrade;
#     #     proxy_set_header Connection 'upgrade';
#     #     proxy_set_header Host $host;
#     #     proxy_cache_bypass $http_upgrade;
#     # }

#     # location / {
#     #     proxy_pass http://localhost:3000;  # Aquí hacemos el proxy hacia el puerto 3000 dentro del contenedor
#     #     proxy_http_version 1.1;
#     #     proxy_set_header Upgrade $http_upgrade;
#     #     proxy_set_header Connection 'upgrade';
#     #     proxy_set_header Host $host;
#     #     proxy_cache_bypass $http_upgrade;

#     # #     # Para asegurar que la aplicación Nuxt se ejecute correctamente
#     # #     proxy_set_header X-Real-IP $remote_addr;
#     # #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     # #     proxy_set_header X-Forwarded-Proto $scheme;
#     # }

#     # # Redirigir rutas de API al servidor Nuxt
#     # location /api {
#     #     proxy_pass http://localhost:3000;  # Servidor Nuxt escuchando en el puerto 3000
#     #     proxy_http_version 1.1;
#     #     proxy_set_header Upgrade $http_upgrade;
#     #     proxy_set_header Connection 'upgrade';
#     #     proxy_set_header Host $host;
#     #     proxy_cache_bypass $http_upgrade;
#     # }

#     # # Archivos estáticos (opcional, si usas `nuxt generate`)
#     # location /_nuxt/ {
#     #     root /var/www/nuxt;
#     # }
# }